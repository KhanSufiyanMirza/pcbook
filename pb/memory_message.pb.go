// Code generated by protoc-gen-go. DO NOT EDIT.
// source: memory_message.proto

package sufiyan_pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Memory_Unit int32

const (
	Memory_UNKNOWN  Memory_Unit = 0
	Memory_BIT      Memory_Unit = 1
	Memory_BYTE     Memory_Unit = 2
	Memory_KILOBYTE Memory_Unit = 3
	Memory_MEGABYTE Memory_Unit = 4
	Memory_GIGABYTE Memory_Unit = 5
	Memory_TERABYTE Memory_Unit = 6
)

var Memory_Unit_name = map[int32]string{
	0: "UNKNOWN",
	1: "BIT",
	2: "BYTE",
	3: "KILOBYTE",
	4: "MEGABYTE",
	5: "GIGABYTE",
	6: "TERABYTE",
}

var Memory_Unit_value = map[string]int32{
	"UNKNOWN":  0,
	"BIT":      1,
	"BYTE":     2,
	"KILOBYTE": 3,
	"MEGABYTE": 4,
	"GIGABYTE": 5,
	"TERABYTE": 6,
}

func (x Memory_Unit) String() string {
	return proto.EnumName(Memory_Unit_name, int32(x))
}

func (Memory_Unit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c0c7f919ccc765da, []int{0, 0}
}

type Memory struct {
	Unit                 Memory_Unit `protobuf:"varint,1,opt,name=unit,proto3,enum=sufiyan.pcbook.Memory_Unit" json:"unit,omitempty"`
	Value                uint64      `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Memory) Reset()         { *m = Memory{} }
func (m *Memory) String() string { return proto.CompactTextString(m) }
func (*Memory) ProtoMessage()    {}
func (*Memory) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0c7f919ccc765da, []int{0}
}

func (m *Memory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Memory.Unmarshal(m, b)
}
func (m *Memory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Memory.Marshal(b, m, deterministic)
}
func (m *Memory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Memory.Merge(m, src)
}
func (m *Memory) XXX_Size() int {
	return xxx_messageInfo_Memory.Size(m)
}
func (m *Memory) XXX_DiscardUnknown() {
	xxx_messageInfo_Memory.DiscardUnknown(m)
}

var xxx_messageInfo_Memory proto.InternalMessageInfo

func (m *Memory) GetUnit() Memory_Unit {
	if m != nil {
		return m.Unit
	}
	return Memory_UNKNOWN
}

func (m *Memory) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func init() {
	proto.RegisterEnum("sufiyan.pcbook.Memory_Unit", Memory_Unit_name, Memory_Unit_value)
	proto.RegisterType((*Memory)(nil), "sufiyan.pcbook.Memory")
}

func init() { proto.RegisterFile("memory_message.proto", fileDescriptor_c0c7f919ccc765da) }

var fileDescriptor_c0c7f919ccc765da = []byte{
	// 202 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xc9, 0x4d, 0xcd, 0xcd,
	0x2f, 0xaa, 0x8c, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0xe2, 0x2b, 0x2e, 0x4d, 0xcb, 0xac, 0x4c, 0xcc, 0xd3, 0x2b, 0x48, 0x4e, 0xca, 0xcf, 0xcf,
	0x56, 0x5a, 0xcf, 0xc8, 0xc5, 0xe6, 0x0b, 0x56, 0x28, 0xa4, 0xcf, 0xc5, 0x52, 0x9a, 0x97, 0x59,
	0x22, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x67, 0x24, 0xad, 0x87, 0xaa, 0x52, 0x0f, 0xa2, 0x4a, 0x2f,
	0x34, 0x2f, 0xb3, 0x24, 0x08, 0xac, 0x50, 0x48, 0x84, 0x8b, 0xb5, 0x2c, 0x31, 0xa7, 0x34, 0x55,
	0x82, 0x49, 0x81, 0x51, 0x83, 0x25, 0x08, 0xc2, 0x51, 0x8a, 0xe3, 0x62, 0x01, 0xa9, 0x11, 0xe2,
	0xe6, 0x62, 0x0f, 0xf5, 0xf3, 0xf6, 0xf3, 0x0f, 0xf7, 0x13, 0x60, 0x10, 0x62, 0xe7, 0x62, 0x76,
	0xf2, 0x0c, 0x11, 0x60, 0x14, 0xe2, 0xe0, 0x62, 0x71, 0x8a, 0x0c, 0x71, 0x15, 0x60, 0x12, 0xe2,
	0xe1, 0xe2, 0xf0, 0xf6, 0xf4, 0xf1, 0x07, 0xf3, 0x98, 0x41, 0x3c, 0x5f, 0x57, 0x77, 0x47, 0x30,
	0x8f, 0x05, 0xc4, 0x73, 0xf7, 0x84, 0xf2, 0x58, 0x41, 0xbc, 0x10, 0xd7, 0x20, 0x08, 0x8f, 0xcd,
	0x89, 0x27, 0x8a, 0x0b, 0xee, 0xb2, 0xa4, 0x24, 0x36, 0xb0, 0xb7, 0x8c, 0x01, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x2f, 0xb8, 0x67, 0x33, 0xee, 0x00, 0x00, 0x00,
}
